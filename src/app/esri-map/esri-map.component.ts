import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';
import { EsriLoaderService } from 'angular-esri-loader';
import { Observable } from 'rxjs/Observable';
import 'rxjs';

@Component({
  selector: 'esri-map',
  templateUrl: './esri-map.component.html',
  styleUrls: ['./esri-map.component.css']
})

export class EsriMapComponent implements OnInit {
  @ViewChild('mapViewContainer') private mapViewContainer: ElementRef;
  @ViewChild('progressBar') private progressBar: ElementRef;

  public mapView: __esri.MapView;
  public sceneView: __esri.SceneView;
  private map: __esri.Map;

  private readonly jsAPIVersion = '4.5';
  private readonly dataChunkSize = 1000;

  private usCitiesFeatureLayer: any;
  private usCountiesFeatureLayer: any;
  private usStatesFeatureLayer: any;
  private usHighwaysFeatureLayer: any;
  private dcpPlantsFeatureLayer: any;
  private dcpBoostersFeatureLayer: any;
  //private dcpMetersFeatureLayer: any;

  private dcpPipelinesFeatureLayer: any;

  constructor(
    private esriLoader: EsriLoaderService
  ) { }

  public ngOnInit() {
    return this.esriLoader.load({
      url: 'https://js.arcgis.com/' + this.jsAPIVersion + '/'
    }).then(() => {
      this.esriLoader.loadModules([
        'esri/Map',
        'esri/WebMap',
        'esri/Basemap',
        'esri/views/MapView',
        'esri/geometry/Extent',
        'esri/geometry/Point',
        'esri/layers/FeatureLayer',
        'esri/widgets/Home',
        'esri/widgets/Legend',
        'esri/widgets/Popup',
        'esri/PopupTemplate',
        'esri/geometry/support/webMercatorUtils'
      ]).then(([
        Map,
        WebMap,
        Basemap,
        MapView,
        Extent,
        Point,
        FeatureLayer,
        Home,
        Legend,
        Popup,
        PopupTemplate,
        WebMercatorUtils
      ]: [__esri.MapConstructor, __esri.WebMapConstructor, __esri.BasemapConstructor, __esri.MapViewConstructor, __esri.ExtentConstructor, __esri.PointConstructor, __esri.FeatureLayerConstructor, __esri.HomeConstructor, __esri.LegendConstructor, __esri.PopupConstructor, __esri.PopupTemplateConstructor, __esri.webMercatorUtils]) => {










        //this.loadMapViewWithUSFeatureLayers(Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils);
        //this.loadMapViewWithDCPFeatureLayers(Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils);
        this.loadMapViewWithUSAndDCPFeatureLayers(Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils);









      });
    });
  }

  private loadMapViewWithUSFeatureLayers = (Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils): void => {
    this.showProgressBar();

    // United States Extent (WKID: 102100)
    let xMin = -14601853.95;
    let yMin = 1796785.96;
    let xMax = -6814979.53;
    let yMax = 7371348.5;
    let wkid = 102100;

    let homeExtent = new Extent({
      xmax: xMax,
      xmin: xMin,
      ymax: yMax,
      ymin: yMin,
      spatialReference: {
        "wkid": wkid
      }
    });

    //let basemapId = 'streets-night-vector';
    //let basemapId = 'streets-vector'
    let basemapId = 'streets-navigation-vector';
    //let basemapId = 'streets-relief-vector';
    //let basemapId = 'topo-vector';

    let baseMap = Basemap.fromId(basemapId);

    this.map = new Map(
      {
        basemap: baseMap
      }
    );

    let zoom = 4;

    this.mapView = new MapView({
      container: this.mapViewContainer.nativeElement,
      //center: centerPoint,
      extent: homeExtent,
      //scale: scale,
      //spatialReference: { wkid: 4326 },
      zoom: zoom,
      map: this.map,
      //map: webMap,
      popup: {
        dockEnabled: false,
        dockOptions: {
          buttonEnabled: true,
          breakpoint: true
        }
      }
    });

    let homeButton = new Home({
      view: this.mapView
    });

    this.mapView.ui.add(homeButton, "top-left");

    let legend = new Legend({
      view: this.mapView
    });

    this.mapView.ui.add(legend, "bottom-right");

    this.mapView.then((results) => {
      console.log('map view loaded!', results);


      this.loadUSStates(FeatureLayer);
      this.loadUSHighways(FeatureLayer);
      //this.loadUSCounties(FeatureLayer);
      this.loadUSCities(FeatureLayer);

      this.hideProgressBar();
    });

  }

  private loadMapViewWithDCPFeatureLayers = (Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils): void => {
    this.showProgressBar();

    // United States Extent (WKID: 102100)
    let xMin = -14601853.95;
    let yMin = 1796785.96;
    let xMax = -6814979.53;
    let yMax = 7371348.5;
    let wkid = 102100;

    let homeExtent = new Extent({
      xmax: xMax,
      xmin: xMin,
      ymax: yMax,
      ymin: yMin,
      spatialReference: {
        "wkid": wkid
      }
    });

    //let basemapId = 'streets-night-vector';
    //let basemapId = 'streets-vector'
    //let basemapId = 'streets-navigation-vector';
    //let basemapId = 'streets-relief-vector';
    let basemapId = 'topo-vector';

    let baseMap = Basemap.fromId(basemapId);

    this.map = new Map(
      {
        basemap: baseMap
      }
    );

    let zoom = 4;

    this.mapView = new MapView({
      container: this.mapViewContainer.nativeElement,
      //center: centerPoint,
      extent: homeExtent,
      //scale: scale,
      //spatialReference: { wkid: 4326 },
      zoom: zoom,
      map: this.map,
      //map: webMap,
      popup: {
        dockEnabled: false,
        dockOptions: {
          buttonEnabled: true,
          breakpoint: true
        }
      }
    });

    let homeButton = new Home({
      view: this.mapView
    });

    this.mapView.ui.add(homeButton, "top-left");

    let legend = new Legend({
      view: this.mapView
    });

    this.mapView.ui.add(legend, "bottom-right");

    this.mapView.then((results) => {
      console.log('map view loaded!', results);

      //this.loadUSStates(FeatureLayer);
      //this.loadUSHighways(FeatureLayer);
      //this.loadUSCounties(FeatureLayer);
      //this.loadUSCities(FeatureLayer);

      this.loadDCPMeters(FeatureLayer, WebMercatorUtils, null, false);
      //this.loadDCPPlants(FeatureLayer);
      //this.loadDCPBoosters(FeatureLayer);

      this.hideProgressBar();
    });

  }

  private loadMapViewWithUSAndDCPFeatureLayers = (Extent, Point, Basemap, FeatureLayer, Map, MapView, Home, Legend, WebMercatorUtils): void => {
    this.showProgressBar();

    // United States Extent (WKID: 102100)
    let xMin = -14601853.95;
    let yMin = 1796785.96;
    let xMax = -6814979.53;
    let yMax = 7371348.5;
    let wkid = 102100;

    let homeExtent = new Extent({
      xmax: xMax,
      xmin: xMin,
      ymax: yMax,
      ymin: yMin,
      spatialReference: {
        "wkid": wkid
      }
    });

    let basemapId = 'streets-night-vector';
    //let basemapId = 'streets-vector'
    //let basemapId = 'streets-navigation-vector';
    //let basemapId = 'streets-relief-vector';
    //let basemapId = 'topo-vector';

    let baseMap = Basemap.fromId(basemapId);

    this.map = new Map(
      {
        basemap: baseMap
      }
    );

    let zoom = 4;

    this.mapView = new MapView({
      container: this.mapViewContainer.nativeElement,
      //center: centerPoint,
      extent: homeExtent,
      //scale: scale,
      //spatialReference: { wkid: 4326 },
      zoom: zoom,
      map: this.map,
      //map: webMap,
      popup: {
        dockEnabled: false,
        dockOptions: {
          buttonEnabled: true,
          breakpoint: true
        }
      }
    });

    let homeButton = new Home({
      view: this.mapView
    });

    this.mapView.ui.add(homeButton, "top-left");

    let legend = new Legend({
      view: this.mapView
    });

    this.mapView.ui.add(legend, "bottom-right");

    this.mapView.then((results) => {
      console.log('map view loaded!', results);


      this.loadUSStates(FeatureLayer);
      this.loadUSHighways(FeatureLayer);
      //this.loadUSCounties(FeatureLayer);
      this.loadUSCities(FeatureLayer);

      // 12 Meters
      let meterNumbers = ['713226-00', '713227-00', '713228-00', '713229-00', '713230-00', '713231-00', '713232-00', '713233-00', '713236-00', '713238-00', '713243-00', '713245-00'];

      // 977 Meters
      // let meterNumbers = ['713226-00', '713227-00', '713228-00', '713229-00', '713230-00', '713231-00', '713232-00', '713233-00', '713236-00', '713238-00', '713243-00', '713245-00', '713248-00', '713249-00', '713252-00', '713253-00', '713254-00', '713255-00', '713256-00', '713257-00', '713258-00', '713259-00', '713260-00', '713261-00', '713262-00', '713263-00', '713264-00', '45027-00', '713266-00', '713271-00', '713274-00', '713277-00', '713283-00', '45040-00', '713287-00', '713291-00', '713292-00', '713293-00', '45048-00', '713297-00', '713298-00', '713299-00', '45052-00', '713301-00', '713302-00', '713303-00', '713304-00', '45059-00', '713306-00', '713307-00', '45061-00', '713312-00', '713315-00', '45065-00', '713316-00', '713317-00', '713322-00', '713328-00', '713333-00', '713335-00', '713336-00', '713867-00', '713868-00', '713869-00', '713871-00', '713873-00', '713875-00', '713876-00', '713877-00', '713878-00', '713880-00', '713881-00', '713882-00', '45094-00', '713886-00', '713887-00', '45099-00', '45100-00', '713891-00', '713894-00', '713897-00', '45102-00', '713898-00', '713901-00', '713906-00', '713908-00', '713909-00', '713910-00', '713911-00', '713912-00', '713913-00', '713917-00', '713918-00', '713920-00', '713921-00', '713923-00', '713924-00', '713926-00', '45136-00', '713931-00', '713932-00', '713933-00', '713936-00', '713937-00', '713938-00', '45144-00', '713940-00', '45145-00', '713944-00', '45147-00', '713946-00', '713947-00', '713950-00', '45152-00', '45153-00', '45156-00', '45163-00', '45165-00', '45168-00', '45169-00', '45173-00', '45176-00', '45177-00', '45178-00', '45182-00', '45187-00', '45188-00', '45198-00', '45223-00', '45225-00', '45226-00', '45227-00', '45230-00', '45233-00', '45235-00', '45238-00', '45239-00', '45242-00', '45246-00', '45248-00', '45252-00', '45253-00', '45256-00', '45258-00', '45259-00', '45261-00', '45262-00', '45268-00', '45274-00', '45275-00', '45282-00', '45287-00', '45290-00', '45291-00', '45294-00', '45295-00', '714376-00', '714378-00', '714381-00', '45299-00', '714384-00', '714385-00', '714386-00', '714387-00', '714388-00', '714891-00', '714892-00', '714893-00', '714894-00', '714899-00', '714903-00', '714959-00', '714960-00', '714961-00', '714963-00', '714964-00', '714965-00', '714966-00', '714967-00', '714968-00', '714969-00', '714981-00', '714993-00', '714994-00', '714995-00', '714996-00', '714998-00', '714999-00', '715000-00', '715001-00', '715003-00', '715004-00', '715005-00', '715006-00', '715007-00', '715008-00', '715010-00', '715012-00', '715014-00', '715015-00', '715017-00', '715019-00', '715022-00', '715023-00', '715025-00', '718300-00', '718301-00', '718302-00', '718305-00', '718308-00', '718309-00', '718311-00', '718312-00', '718313-00', '718317-00', '718318-00', '718320-00', '718325-00', '718326-00', '718330-00', '718333-00', '718335-00', '718336-00', '718339-00', '718340-00', '718341-00', '718342-00', '718344-00', '718354-00', '718356-00', '718357-00', '718359-00', '718360-00', '718362-00', '718366-00', '718368-00', '718369-00', '718372-00', '718376-00', '718386-00', '718387-00', '718388-00', '718390-00', '718394-00', '718397-00', '718406-00', '718408-00', '718410-00', '718411-00', '718412-00', '718415-00', '718416-00', '718417-00', '718418-00', '718419-00', '718422-00', '718423-00', '718426-00', '718427-00', '718437-00', '718443-00', '718444-00', '718447-00', '718448-00', '718449-00', '718450-00', '718459-00', '718460-00', '718462-00', '718463-00', '718464-00', '718473-00', '718476-00', '718478-00', '718483-00', '718485-00', '718486-00', '718496-00', '718498-00', '718499-00', '718600-00', '718601-00', '718602-00', '718603-00', '718606-00', '718609-00', '718612-00', '718614-00', '718616-00', '718618-00', '718619-00', '718622-00', '718625-00', '718626-00', '718627-00', '718630-00', '718632-00', '718634-00', '718635-00', '718637-00', '718638-00', '718639-00', '718640-00', '718644-00', '718647-00', '718648-00', '718649-00', '718653-00', '718654-00', '718655-00', '718657-00', '718659-00', '718660-00', '718662-00', '718666-00', '718667-00', '718673-00', '718674-00', '718676-00', '718678-00', '718681-00', '718682-00', '718683-00', '718684-00', '718685-00', '718691-00', '718692-00', '718693-00', '718694-00', '718698-00', '718699-00', '718702-00', '718706-00', '718707-00', '718709-00', '718710-00', '718711-00', '718725-00', '718730-00', '718733-00', '718734-00', '718735-00', '718738-00', '718739-00', '718741-00', '718744-00', '720101-00', '720103-00', '720104-00', '720110-00', '720113-00', '720114-00', '720115-00', '720120-00', '720121-00', '720125-00', '720127-00', '720128-00', '720129-00', '720130-00', '720131-00', '720132-00', '720134-00', '720135-00', '720138-00', '720140-00', '720141-00', '720144-00', '720145-00', '720146-00', '720147-00', '720149-00', '720150-00', '720151-00', '720152-00', '720153-00', '720154-00', '720155-00', '720156-00', '720162-00', '720167-00', '720168-00', '720170-00', '720178-00', '720180-00', '720181-00', '720182-00', '720186-00', '720187-00', '720188-00', '720189-00', '06125001', '06125002', '06125343', '06125675', '06125683', '06125707', '06125721', '06175217', '06315004', '06315012', '06315014', '06315505', '06315508', '06315570', '06315572', '06315576', '06315624', '06315695', '06375003', '06375004', '06375660', '06375711', '06375723', '06375735', '06375750', '06375788', '45193-00', '45194-00', '45195-00', '45260-00', '718348-00', '718363-00', '718378-00', '718379-00', '718380-00', '718391-00', '718396-00', '718399-00', '718402-00', '718403-00', '718429-00', '718430-00', '718451-00', '718467-00', '718636-00', '718642-00', '718643-00', '718645-00', '718646-00', '718650-00', '718652-00', '718677-00', '718687-00', '718695-00', '718696-00', '718708-00', '720116-00', '720117-00', '720194-00', '720195-00', '720197-00', '13112050', '13135001', '13135002', '13135003', '13135007', '13135008', '13135009', '13135010', '13135011', '13135013', '13135014', '13135015', '13135018', '13135019', '13135022', '13135023', '13135028', '13135031', '13135033', '13135035', '13135036', '13135038', '13135040', '13135044', '13135046', '13135047', '13135048', '13135049', '13135050', '13135051', '13135053', '13135054', '13135056', '13135057', '13135059', '13135060', '13135063', '13135068', '13135069', '13135072', '13135073', '13135074', '13135075', '13135083', '13135085', '13135090', '13135091', '13135092', '13135104', '13135117', '13135129', '13135137', '13135143', '13135147', '13135149', '13135161', '13135171', '13135172', '13135174', '13135177', '13135179', '13135182', '13135183', '13135184', '13135186', '13135187', '13135190', '13135195', '13135196', '13135198', '13135200', '13135201', '13135206', '13135211', '13135213', '13135218', '13135223', '13135224', '13135226', '13135229', '13135236', '13135237', '13135243', '13135244', '13135248', '13135251', '13135257', '13135259', '13135260', '13135261', '13135263', '13135266', '13135267', '13135270', '13135273', '13135274', '13135276', '13135279', '13135280', '13135284', '13135285', '13135287', '13135292', '13135294', '13135305', '13135308', '13135309', '13135311', '13135314', '13135315', '13135316', '13135320', '13135322', '13135324', '13135326', '13135327', '13135328', '13135330', '13135333', '13135342', '13135345', '13135346', '13135347', '13135349', '13135350', '13135351', '13135353', '13135355', '13135356', '13135358', '13135359', '13135366', '13135368', '13135377', '13135379', '13145003', '13145004', '13145005', '13145011', '13145018', '13145019', '13145020', '13145021', '13145022', '13145023', '13145214', '13155001', '13155002', '13155003', '13155004', '13155005', '13155006', '13155007', '13155008', '13155009', '13155010', '13155011', '13155012', '13155013', '13155014', '13155015', '13155016', '13155017', '13155018', '13155019', '13155020', '13155021', '13155022', '13155023', '13155025', '13155026', '13155028', '13155029', '13155030', '13155032', '13155033', '13155034', '13155035', '13155036', '13155037', '13155038', '13155039', '13155040', '13155041', '13155042', '13155044', '721400-00', '13155045', '13155046', '13155047', '13155048', '13155049', '13155050', '721406-00', '13155051', '13155052', '13155053', '721410-00', '13155054', '721412-00', '721414-00', '721418-00', '721419-00', '721420-00', '721422-00', '721424-00', '721425-00', '13195095', '721427-00', '721433-00', '721434-00', '13195133', '721436-00', '13195145', '721438-00', '721441-00', '721444-00', '13195163', '721447-00', '13195164', '721448-00', '13195231', '721451-00', '721457-00', '721458-00', '721460-00', '721461-00', '721462-00', '721463-00', '721464-00', '721465-00', '721466-00', '721470-00', '721472-00', '721473-00', '721476-00', '721480-00', '721481-00', '721482-00', '721484-00', '721485-00', '721487-00', '721490-00', '721491-00', '721495-00', '721497-00', '721503-00', '721504-00', '721505-00', '721507-00', '721515-00', '14212-00', '14214-00', '721530-00', '14219-00', '721531-00', '14235-00', '721534-00', '14239-00', '721536-00', '14245-00', '721537-00', '721539-00', '14255-00', '721540-00', '721541-00', '721542-00', '14274-00',
      //   '14275-00', '14302-00', '721548-00', '14304-00', '721549-00', '14308-00', '14309-00', '721551-00', '721552-00', '14316-00', '721554-00', '721555-00', '14319-00', '721556-00', '14323-00', '721557-00', '721559-00', '14327-00', '721560-00', '14328-00', '722001-00', '722002-00', '722003-00', '722004-00', '722006-00', '14395-00', '722007-00', '14396-00', '722008-00', '14397-00', '722010-00', '14401-00', '14402-00', '722014-00', '722015-00', '14439-00', '14452-00', '14453-00', '722018-00', '14455-00', '722020-00', '14456-00', '722021-00', '14477-00', '722022-00', '14478-00', '14480-00', '722025-00', '14502-00', '14517-00', '722027-00', '14549-00', '14555-00', '14567-00', '722030-00', '14585-00', '14596-00', '722033-00', '14599-00', '722035-00', '722036-00', '14653-00', '14684-00', '722042-00', '722047-00', '722048-00', '722049-00', '14708-00', '722051-00', '14710-00', '722052-00', '14711-00', '14722-00', '14734-00', '14739-00', '722057-00', '14741-00', '722058-00', '722059-00', '14749-00', '722060-00', '14754-00', '722061-00', '722062-00', '14766-00', '722063-00', '14774-00', '722064-00', '722065-00', '14783-00', '722066-00', '722067-00', '14798-00', '722068-00', '722069-00', '722070-00', '14812-00', '722071-00', '14814-00', '722072-00', '14816-00', '722073-00', '14818-00', '14819-00', '14827-00', '722076-00', '14840-00', '722078-00', '14852-00', '722079-00', '14882-00', '14884-00', '722081-00', '14886-00', '14891-00', '722082-00', '14892-00', '722083-00', '722086-00', '722087-00', '722088-00', '14910-00', '722089-00', '722092-00', '14925-00', '722093-00', '14928-00', '722095-00', '14929-00', '722096-00', '14970-00', '722102-00', '722103-00', '14977-00', '722105-00', '14989-00', '722106-00', '722107-00', '15015-00', '15024-00', '722111-00', '15107-00', '722115-00', '722116-00', '15156-00', '722118-00', '15181-00', '15182-00', '15191-00', '722123-00', '15196-00', '15197-00', '722125-00', '15198-00', '722126-00', '15206-00', '15220-00', '722128-00', '722129-00', '722130-00', '15236-00', '15237-00', '722132-00', '722133-00', '15244-00', '722134-00', '15247-00', '722135-00', '15249-00', '722136-00', '15258-00', '722137-00', '15259-00', '722138-00', '15260-00', '722139-00', '15263-00', '15272-00', '15274-00', '722143-00', '15305-00', '722145-00', '722146-00', '15314-00', '15327-00', '722149-00', '15336-00', '15351-00', '15391-00', '722152-00', '722153-00', '15403-00', '15404-00', '15405-00', '722156-00', '722157-00', '15414-00', '722159-00', '15424-00', '722160-00', '15428-00', '722161-00', '15431-00', '722163-00', '15435-00', '15442-00', '15462-00', '722167-00', '15464-00', '722169-00', '722170-00', '15468-00', '15474-00', '15475-00', '722173-00', '722174-00', '15487-00', '722175-00', '15488-00', '722177-00', '722179-00', '722180-00', '722182-00', '15498-00', '722183-00', '15510-00', '722184-00', '15511-00', '722185-00', '722186-00', '722187-00', '15517-00', '722188-00', '722189-00', '722190-00', '15534-00', '722191-00', '15535-00', '722192-00', '722193-00', '722194-00', '722196-00', '15546-00', '15547-00', '722198-00', '722199-00', '15551-00', '15565-00', '15569-00', '15571-00', '15573-00', '15579-00', '15591-00', '15592-00', '15593-00', '15594-00', '15596-00',
      // ];

      // 2948 Meters
      // let meterNumbers = ['713226-00', '713227-00', '713228-00', '713229-00', '713230-00', '713231-00', '713232-00', '713233-00', '713236-00', '713238-00', '713243-00', '713245-00', '713248-00', '713249-00', '713252-00', '713253-00', '713254-00', '713255-00', '713256-00', '713257-00', '713258-00', '713259-00', '713260-00', '713261-00', '713262-00', '713263-00', '713264-00', '45027-00', '713266-00', '713271-00', '713274-00', '713277-00', '713283-00', '45040-00', '713287-00', '713291-00', '713292-00', '713293-00', '45048-00', '713297-00', '713298-00', '713299-00', '45052-00', '713301-00', '713302-00', '713303-00', '713304-00', '45059-00', '713306-00', '713307-00', '45061-00', '713312-00', '713315-00', '45065-00', '713316-00', '713317-00', '713322-00', '713328-00', '713333-00', '713335-00', '713336-00', '713867-00', '713868-00', '713869-00', '713871-00', '713873-00', '713875-00', '713876-00', '713877-00', '713878-00', '713880-00', '713881-00', '713882-00', '45094-00', '713886-00', '713887-00', '45099-00', '45100-00', '713891-00', '713894-00', '713897-00', '45102-00', '713898-00', '713901-00', '713906-00', '713908-00', '713909-00', '713910-00', '713911-00', '713912-00', '713913-00', '713917-00', '713918-00', '713920-00', '713921-00', '713923-00', '713924-00', '713926-00', '45136-00', '713931-00', '713932-00', '713933-00', '713936-00', '713937-00', '713938-00', '45144-00', '713940-00', '45145-00', '713944-00', '45147-00', '713946-00', '713947-00', '713950-00', '45152-00', '45153-00', '45156-00', '45163-00', '45165-00', '45168-00', '45169-00', '45173-00', '45176-00', '45177-00', '45178-00', '45182-00', '45187-00', '45188-00', '45198-00', '45223-00', '45225-00', '45226-00', '45227-00', '45230-00', '45233-00', '45235-00', '45238-00', '45239-00', '45242-00', '45246-00', '45248-00', '45252-00', '45253-00', '45256-00', '45258-00', '45259-00', '45261-00', '45262-00', '45268-00', '45274-00', '45275-00', '45282-00', '45287-00', '45290-00', '45291-00', '45294-00', '45295-00', '714376-00', '714378-00', '714381-00', '45299-00', '714384-00', '714385-00', '714386-00', '714387-00', '714388-00', '714891-00', '714892-00', '714893-00', '714894-00', '714899-00', '714903-00', '714959-00', '714960-00', '714961-00', '714963-00', '714964-00', '714965-00', '714966-00', '714967-00', '714968-00', '714969-00', '714981-00', '714993-00', '714994-00', '714995-00', '714996-00', '714998-00', '714999-00', '715000-00', '715001-00', '715003-00', '715004-00', '715005-00', '715006-00', '715007-00', '715008-00', '715010-00', '715012-00', '715014-00', '715015-00', '715017-00', '715019-00', '715022-00', '715023-00', '715025-00', '718300-00', '718301-00', '718302-00', '718305-00', '718308-00', '718309-00', '718311-00', '718312-00', '718313-00', '718317-00', '718318-00', '718320-00', '718325-00', '718326-00', '718330-00', '718333-00', '718335-00', '718336-00', '718339-00', '718340-00', '718341-00', '718342-00', '718344-00', '718354-00', '718356-00', '718357-00', '718359-00', '718360-00', '718362-00', '718366-00', '718368-00', '718369-00', '718372-00', '718376-00', '718386-00', '718387-00', '718388-00', '718390-00', '718394-00', '718397-00', '718406-00', '718408-00', '718410-00', '718411-00', '718412-00', '718415-00', '718416-00', '718417-00', '718418-00', '718419-00', '718422-00', '718423-00', '718426-00', '718427-00', '718437-00', '718443-00', '718444-00', '718447-00', '718448-00', '718449-00', '718450-00', '718459-00', '718460-00', '718462-00', '718463-00', '718464-00', '718473-00', '718476-00', '718478-00', '718483-00', '718485-00', '718486-00', '718496-00', '718498-00', '718499-00', '718600-00', '718601-00', '718602-00', '718603-00', '718606-00', '718609-00', '718612-00', '718614-00', '718616-00', '718618-00', '718619-00', '718622-00', '718625-00', '718626-00', '718627-00', '718630-00', '718632-00', '718634-00', '718635-00', '718637-00', '718638-00', '718639-00', '718640-00', '718644-00', '718647-00', '718648-00', '718649-00', '718653-00', '718654-00', '718655-00', '718657-00', '718659-00', '718660-00', '718662-00', '718666-00', '718667-00', '718673-00', '718674-00', '718676-00', '718678-00', '718681-00', '718682-00', '718683-00', '718684-00', '718685-00', '718691-00', '718692-00', '718693-00', '718694-00', '718698-00', '718699-00', '718702-00', '718706-00', '718707-00', '718709-00', '718710-00', '718711-00', '718725-00', '718730-00', '718733-00', '718734-00', '718735-00', '718738-00', '718739-00', '718741-00', '718744-00', '720101-00', '720103-00', '720104-00', '720110-00', '720113-00', '720114-00', '720115-00', '720120-00', '720121-00', '720125-00', '720127-00', '720128-00', '720129-00', '720130-00', '720131-00', '720132-00', '720134-00', '720135-00', '720138-00', '720140-00', '720141-00', '720144-00', '720145-00', '720146-00', '720147-00', '720149-00', '720150-00', '720151-00', '720152-00', '720153-00', '720154-00', '720155-00', '720156-00', '720162-00', '720167-00', '720168-00', '720170-00', '720178-00', '720180-00', '720181-00', '720182-00', '720186-00', '720187-00', '720188-00', '720189-00', '06125001', '06125002', '06125343', '06125675', '06125683', '06125707', '06125721', '06175217', '06315004', '06315012', '06315014', '06315505', '06315508', '06315570', '06315572', '06315576', '06315624', '06315695', '06375003', '06375004', '06375660', '06375711', '06375723', '06375735', '06375750', '06375788', '45193-00', '45194-00', '45195-00', '45260-00', '718348-00', '718363-00', '718378-00', '718379-00', '718380-00', '718391-00', '718396-00', '718399-00', '718402-00', '718403-00', '718429-00', '718430-00', '718451-00', '718467-00', '718636-00', '718642-00', '718643-00', '718645-00', '718646-00', '718650-00', '718652-00', '718677-00', '718687-00', '718695-00', '718696-00', '718708-00', '720116-00', '720117-00', '720194-00', '720195-00', '720197-00', '13112050', '13135001', '13135002', '13135003', '13135007', '13135008', '13135009', '13135010', '13135011', '13135013', '13135014', '13135015', '13135018', '13135019', '13135022', '13135023', '13135028', '13135031', '13135033', '13135035', '13135036', '13135038', '13135040', '13135044', '13135046', '13135047', '13135048', '13135049', '13135050', '13135051', '13135053', '13135054', '13135056', '13135057', '13135059', '13135060', '13135063', '13135068', '13135069', '13135072', '13135073', '13135074', '13135075', '13135083', '13135085', '13135090', '13135091', '13135092', '13135104', '13135117', '13135129', '13135137', '13135143', '13135147', '13135149', '13135161', '13135171', '13135172', '13135174', '13135177', '13135179', '13135182', '13135183', '13135184', '13135186', '13135187', '13135190', '13135195', '13135196', '13135198', '13135200', '13135201', '13135206', '13135211', '13135213', '13135218', '13135223', '13135224', '13135226', '13135229', '13135236', '13135237', '13135243', '13135244', '13135248', '13135251', '13135257', '13135259', '13135260', '13135261', '13135263', '13135266', '13135267', '13135270', '13135273', '13135274', '13135276', '13135279', '13135280', '13135284', '13135285', '13135287', '13135292', '13135294', '13135305', '13135308', '13135309', '13135311', '13135314', '13135315', '13135316', '13135320', '13135322', '13135324', '13135326', '13135327', '13135328', '13135330', '13135333', '13135342', '13135345', '13135346', '13135347', '13135349', '13135350', '13135351', '13135353', '13135355', '13135356', '13135358', '13135359', '13135366', '13135368', '13135377', '13135379', '13145003', '13145004', '13145005', '13145011', '13145018', '13145019', '13145020', '13145021', '13145022', '13145023', '13145214', '13155001', '13155002', '13155003', '13155004', '13155005', '13155006', '13155007', '13155008', '13155009', '13155010', '13155011', '13155012', '13155013', '13155014', '13155015', '13155016', '13155017', '13155018', '13155019', '13155020', '13155021', '13155022', '13155023', '13155025', '13155026', '13155028', '13155029', '13155030', '13155032', '13155033', '13155034', '13155035', '13155036', '13155037', '13155038', '13155039', '13155040', '13155041', '13155042', '13155044', '721400-00', '13155045', '13155046', '13155047', '13155048', '13155049', '13155050', '721406-00', '13155051', '13155052', '13155053', '721410-00', '13155054', '721412-00', '721414-00', '721418-00', '721419-00', '721420-00', '721422-00', '721424-00', '721425-00', '13195095', '721427-00', '721433-00', '721434-00', '13195133', '721436-00', '13195145', '721438-00', '721441-00', '721444-00', '13195163', '721447-00', '13195164', '721448-00', '13195231', '721451-00', '721457-00', '721458-00', '721460-00', '721461-00', '721462-00', '721463-00', '721464-00', '721465-00', '721466-00', '721470-00', '721472-00', '721473-00', '721476-00', '721480-00', '721481-00', '721482-00', '721484-00', '721485-00', '721487-00', '721490-00', '721491-00', '721495-00', '721497-00', '721503-00', '721504-00', '721505-00', '721507-00', '721515-00', '14212-00', '14214-00', '721530-00', '14219-00', '721531-00', '14235-00', '721534-00', '14239-00', '721536-00', '14245-00', '721537-00', '721539-00', '14255-00', '721540-00', '721541-00', '721542-00', '14274-00',
      //   '14275-00', '14302-00', '721548-00', '14304-00', '721549-00', '14308-00', '14309-00', '721551-00', '721552-00', '14316-00', '721554-00', '721555-00', '14319-00', '721556-00', '14323-00', '721557-00', '721559-00', '14327-00', '721560-00', '14328-00', '722001-00', '722002-00', '722003-00', '722004-00', '722006-00', '14395-00', '722007-00', '14396-00', '722008-00', '14397-00', '722010-00', '14401-00', '14402-00', '722014-00', '722015-00', '14439-00', '14452-00', '14453-00', '722018-00', '14455-00', '722020-00', '14456-00', '722021-00', '14477-00', '722022-00', '14478-00', '14480-00', '722025-00', '14502-00', '14517-00', '722027-00', '14549-00', '14555-00', '14567-00', '722030-00', '14585-00', '14596-00', '722033-00', '14599-00', '722035-00', '722036-00', '14653-00', '14684-00', '722042-00', '722047-00', '722048-00', '722049-00', '14708-00', '722051-00', '14710-00', '722052-00', '14711-00', '14722-00', '14734-00', '14739-00', '722057-00', '14741-00', '722058-00', '722059-00', '14749-00', '722060-00', '14754-00', '722061-00', '722062-00', '14766-00', '722063-00', '14774-00', '722064-00', '722065-00', '14783-00', '722066-00', '722067-00', '14798-00', '722068-00', '722069-00', '722070-00', '14812-00', '722071-00', '14814-00', '722072-00', '14816-00', '722073-00', '14818-00', '14819-00', '14827-00', '722076-00', '14840-00', '722078-00', '14852-00', '722079-00', '14882-00', '14884-00', '722081-00', '14886-00', '14891-00', '722082-00', '14892-00', '722083-00', '722086-00', '722087-00', '722088-00', '14910-00', '722089-00', '722092-00', '14925-00', '722093-00', '14928-00', '722095-00', '14929-00', '722096-00', '14970-00', '722102-00', '722103-00', '14977-00', '722105-00', '14989-00', '722106-00', '722107-00', '15015-00', '15024-00', '722111-00', '15107-00', '722115-00', '722116-00', '15156-00', '722118-00', '15181-00', '15182-00', '15191-00', '722123-00', '15196-00', '15197-00', '722125-00', '15198-00', '722126-00', '15206-00', '15220-00', '722128-00', '722129-00', '722130-00', '15236-00', '15237-00', '722132-00', '722133-00', '15244-00', '722134-00', '15247-00', '722135-00', '15249-00', '722136-00', '15258-00', '722137-00', '15259-00', '722138-00', '15260-00', '722139-00', '15263-00', '15272-00', '15274-00', '722143-00', '15305-00', '722145-00', '722146-00', '15314-00', '15327-00', '722149-00', '15336-00', '15351-00', '15391-00', '722152-00', '722153-00', '15403-00', '15404-00', '15405-00', '722156-00', '722157-00', '15414-00', '722159-00', '15424-00', '722160-00', '15428-00', '722161-00', '15431-00', '722163-00', '15435-00', '15442-00', '15462-00', '722167-00', '15464-00', '722169-00', '722170-00', '15468-00', '15474-00', '15475-00', '722173-00', '722174-00', '15487-00', '722175-00', '15488-00', '722177-00', '722179-00', '722180-00', '722182-00', '15498-00', '722183-00', '15510-00', '722184-00', '15511-00', '722185-00', '722186-00', '722187-00', '15517-00', '722188-00', '722189-00', '722190-00', '15534-00', '722191-00', '15535-00', '722192-00', '722193-00', '722194-00', '722196-00', '15546-00', '15547-00', '722198-00', '722199-00', '15551-00', '15565-00', '15569-00', '15571-00', '15573-00', '15579-00', '15591-00', '15592-00', '15593-00', '15594-00', '15596-00', '15597-00', '15598-00', '15599-00', '15604-00', '15609-00', '15611-00', '15612-00', '15613-00', '15614-00', '15621-00', '15622-00', '15628-00', '15629-00', '15630-00', '15634-00', '15636-00', '15637-00', '15638-00', '15639-00', '15640-00', '15641-00', '15642-00', '15645-00', '15646-00', '15648-00', '15649-00', '15652-00', '15653-00', '15654-00', '15659-00', '15660-00', '15661-00', '15669-00', '15674-00', '15675-00', '15676-00', '15677-00', '15708-00', '15712-00', '15715-00', '15716-00', '15727-00', '15728-00', '15729-00', '15730-00', '15732-00', '15822-00', '15920-00', '15933-00', '15936-00', '15986-00', '15988-00', '15990-00', '16016-00', '16018-00', '16022-00', '16025-00', '16043-00', '16044-00', '16046-00', '16048-00', '16049-00', '16054-00', '16055-00', '16067-00', '16082-00', '16086-00', '16090-00', '16093-00', '16097-00', '16513-00', '16523-00', '16594-00', '16621-00', '16627-00', '16795-00', '16813-00', '16862-00', '16891-00', '16961-00', '16962-00', '16966-00', '16976-00', '16988-00', '16998-00', '17024-00', '17025-00', '17039-00', '17074-00', '17093-00', '17112-00', '17113-00', '17120-00', '17140-00', '17177-00', '17358-00', '17533-00', '17554-00', '17611-00', '17616-00', '17618-00', '17683-00', '17686-00', '17715-00', '17718-00', '17730-00', '17736-00', '17743-00', '17745-00', '17754-00', '17756-00', '17758-00', '17768-00', '17769-00', '17774-00', '17779-00', '17780-00', '17784-00', '17786-00', '17792-00', '723300-00', '723303-00', '723305-00', '723306-00', '723307-00', '723309-00', '723310-00', '723311-00', '723312-00', '723313-00', '723314-00', '723317-00', '723318-00', '72332-00', '723321-00', '723322-00', '723323-00', '723324-00', '723325-00', '723328-00', '723329-00', '723330-00', '723332-00', '723334-00', '723335-00', '723336-00', '723337-00', '723338-00', '723340-00', '723341-00', '723342-00', '723344-00', '723346-00', '723347-00', '723348-00', '723349-00', '723351-00', '723353-00', '723354-00', '723356-00', '723358-00', '723361-00', '723362-00', '723363-00', '723364-00', '723365-00', '19477-00', '19481-00', '19498-00', '718393-00', '723368-00', '723369-00', '723370-00', '723372-00', '723377-00', '723378-00', '723381-00', '723383-00', '723385-00', '723386-00', '723390-00', '723391-00', '723392-00', '723394-00', '723397-00', '723398-00', '723399-00', '72368-00', '72369-00', '72373-00', '72376-00', '72378-00', '72379-00', '72381-00', '72403-00', '72406-00', '72408-00', '72421-00', '72429-00', '72431-00', '72477-00', '724900-00', '724901-00', '724902-00', '724904-00', '724905-00', '724906-00', '724907-00', '724908-00', '724910-00', '724911-00', '724912-00', '724913-00', '724914-00', '724915-00', '724916-00', '724917-00', '724919-00', '724920-00', '724921-00', '724925-00', '724926-00', '724927-00', '724928-00', '724929-00', '724933-00', '724937-00', '724938-00', '725000-00', '725001-00', '725002-00', '725004-00', '725006-00', '725007-00', '725010-00', '725011-00', '725012-00', '725014-00', '725017-00', '725018-00', '725020-00', '725025-00', '725032-00', '725033-00', '72509-00', '725301-00', '725302-00', '725304-00', '725307-00', '725309-00', '725310-00', '725313-00', '725314-00', '725315-00', '725317-00', '725318-00', '725319-00', '725320-00', '725322-00', '725323-00', '725324-00', '725325-00', '725328-00', '725329-00', '725330-00', '725331-00', '725332-00', '725333-00', '725334-00', '725335-00', '725336-00', '725337-00', '725338-00', '725339-00', '725341-00', '725342-00', '725349-00', '72535-00', '725350-00', '725352-00', '725353-00', '725354-00', '725355-00', '725358-00', '725359-00', '72536-00', '725360-00', '725361-00', '725363-00', '725364-00', '725365-00', '725366-00', '725367-00', '725370-00', '72544-00', '72551-00', '72556-00', '72559-00', '72560-00', '72561-00', '72562-00', '72565-00', '72573-00', '72575-00', '72576-00', '72582-00', '72585-00', '72598-00', '72605-00', '72606-00', '72607-00', '72610-00', '72614-00', '72615-00', '72628-00', '72631-00', '72632-00', '72638-00', '72641-00', '72646-00', '72647-00', '72652-00', '72653-00', '72654-00',
      //   '72657-00', '72658-00', '72660-00', '72665-00', '72667-00', '72673-00', '72677-00', '72680-00', '74006-00', '74012-00', '74014-00', '74015-00', '74020-00', '74022-00', '74024-00', '74027-00', '74028-00', '74029-00', '74036-00', '74043-00', '74044-00', '74047-00', '74048-00', '74049-00', '74050-00', '74054-00', '74056-00', '74060-00', '74061-00', '74063-00', '74065-00', '74066-00', '74067-00', '74068-00', '74069-00', '74072-00', '74074-00', '74082-00', '74084-00', '74085-00', '74086-00', '74089-00', '74098-00', '74099-00', '74112-00', '74113-00', '74132-00', '74135-00', '74140-00', '74145-00', '74153-00', '74183-00', '74188-00', '74189-00', '75051-00', '75072-00', '75076-00', '75077-00', '75078-00', '75080-00', '75082-00', '75083-00', '75087-00', '75093-00', '75099-00', '75100-00', '75106-00', '75111-00', '75113-00', '75114-00', '75117-00', '75126-00', '75127-00', '75128-00', '75129-00', '75133-00', '75136-00', '75137-00', '75140-00', '75141-00', '75142-00', '75143-00', '75144-00', '75148-00', '75186-00', '75193-00', '75203-00', '75216-00', '75225-00', '75243-00', '75247-00', '75255-00', '75267-00', '75271-00', '75275-00', '75277-00', '75285-00', '75297-00', '75315-00', '75346-00', '75375-00', '75404-00', '75405-00', '75436-00', '75585-00', '75590-00', '75600-00', '75691-00', '75698-00', '75702-00', '75749-00', '75755-00', '75764-00', '75772-00', '75791-00', '75801-00', '75852-00', '75853-00', '75857-00', '75868-00', '75871-00', '75874-00', '75883-00', '75887-00', '75888-00', '75889-00', '75893-00', '75895-00', '75896-00', '75897-00', '75898-00', '75911-00', '75915-00', '75916-00', '75921-00', '75929-00', '75932-00', '75940-00', '75941-00', '75945-00', '75946-00', '75958-00', '75962-00', '75967-00', '75970-00', '75972-00', '75974-00', '75986-00', '75991-00', '76019-00', '76020-00', '76021-00', '76122-00', '76132-00', '76139-00', '76174-00', '76177-00', '76190-00', '76209-00', '76210-00', '76215-00', '76217-00', '76220-00', '76223-00', '76237-00', '76238-00', '76239-00', '76501-00', '76504-00', '76505-00', '76511-00', '76513-00', '76514-00', '76517-00', '76518-00', '76523-00', '76562-00', '76568-00', '76578-00', '76581-00', '76582-00', '76598-00', '76707-00', '76711-00', '76738-00', '76739-00', '76741-00', '76744-00', '76752-00', '76778-00', '76780-00', '76782-00', '76785-00', '76800-00', '76801-00', '76804-00', '76808-00', '76813-00', '76815-00', '76816-00', '76819-00', '76820-00', '76825-00', '76827-00', '76828-00', '76831-00', '76833-00', '76834-00', '76835-00', '76836-00', '76838-00', '76840-00', '76841-00', '76843-00', '76845-00', '76846-00', '76847-00', '76850-00', '76856-00', '76857-00', '76858-00', '76860-00', '76861-00', '76862-00', '76864-00', '76865-00', '76866-00', '76867-00', '76870-00', '76871-00', '76872-00', '76873-00', '76874-00', '76875-00', '76876-00', '76878-00', '76880-00', '76882-00', '76883-00', '76884-00', '76885-00', '76886-00', '76887-00', '76890-00', '76891-00', '76892-00', '76893-00', '76895-00', '76896-00', '76899-00', '76918-00', '76940-00', '76941-00', '76943-00', '76954-00', '76972-00', '82014-00', '82023-00', '82028-00', '82035-00', '82038-00', '82039-00', '82040-00', '82041-00', '82043-00', '82050-00', '82055-00', '82061-00', '82062-00', '82064-00', '82073-00', '82076-00', '82077-00', '82079-00', '82083-00', '82084-00', '82088-00', '82092-00', '82093-00', '82094-00', '82096-00', '94003-00', '94006-00', '94010-00', '94011-00', '94015-00', '94020-00', '94036-00', '94038-00', '94050-00', '94051-00', '94056-00', '94057-00', '94058-00', '94059-00', '94061-00', '94063-00', '94067-00', '94072-00', '94086-00', '94089-00', '94104-00', '94105-00', '94142-00', '94500-00', '94504-00', '94516-00', '94521-00', '94523-00', '94527-00', '94529-00', '82018-00', '82027-00', '82037-00', '82048-00', '82053-00', '82059-00', '15518-00', '82071-00', '15690-00', '82078-00', '82081-00', '94004-00', '94084-00', '66400-00', '66403-00', '66423-00', '66425-00', '66431-00', '66433-00', '66448-00', '66464-00', '66465-00', '66491-00', '66492-00', '66493-00', '66496-00', '66501-00', '66502-00', '66522-00', '66525-00', '66535-00', '66537-00', '66540-00', '66547-00', '66552-00', '66554-00', '66556-00', '66558-00', '66559-00', '66563-00', '66570-00', '66571-00', '66572-00', '66573-00', '66574-00', '66576-00', '66579-00', '66580-00', '66581-00', '66582-00', '66583-00', '66591-00', '66592-00', '66594-00', '700227-00', '700228-00', '700230-00', '700235-00', '700237-00', '700316-00', '700317-00', '700319-00', '700322-00', '700323-00', '700324-00', '19476-00', '700328-00', '700334-00', '700338-00', '705157-00', '705158-00', '705160-00', '705163-00', '705171-00', '705173-00', '705196-00', '705197-00', '705198-00', '705199-00', '708229-00', '708233-00', '708234-00', '708235-00', '708236-00', '708237-00', '708238-00', '708239-00', '708240-00', '708241-00', '708242-00', '708245-00', '708246-00', '708247-00', '708248-00', '708249-00', '708250-00', '708251-00', '708252-00', '708278-00', '708281-00', '708286-00', '709801-00', '709803-00', '709804-00', '709806-00', '709809-00', '709811-00', '709817-00', '709819-00', '709821-00', '709823-00', '709824-00', '709825-00', '709826-00', '709827-00', '709828-00', '709831-00', '709849-00', '710490-00', '710702-00', '710703-00', '710710-00', '710720-00', '710721-00', '710722-00', '710723-00', '710724-00', '710725-00', '710726-00', '710729-00', '710748-00', '710749-00', '711202-00', '711211-00', '711224-00', '711227-00', '711228-00', '711229-00', '711234-00', '711236-00', '711238-00', '711245-00', '711246-00', '711250-00', '711260-00', '711261-00', '711262-00', '711263-00', '711296-00', '711297-00', '711302-00', '711304-00', '711305-00', '711308-00', '711309-00', '711347-00', '711351-00', '711377-00', '711378-00', '711380-00', '711383-00', '711384-00', '711386-00', '711387-00', '711388-00', '711392-00', '711393-00', '711396-00', '711400-00', '711511-00', '711524-00', '711529-00', '711532-00', '711533-00', '711534-00', '711542-00', '711547-00', '711550-00', '711552-00', '711554-00', '711556-00', '711559-00', '711560-00', '711561-00', '711564-00', '711565-00', '711566-00', '711567-00', '711577-00', '711588-00', '711593-00', '711598-00', '94535-00', '94536-00', '94539-00', '94540-00', '94548-00', '94700-00', '94702-00', '94728-00', '94731-00', '95806-00', '95809-00', '95811-00', '95812-00', '95814-00', '95817-00', '95825-00', '95831-00', '95836-00', '95839-00', '95851-00', '95853-00', '95858-00', '95859-00', '95865-00', '95866-00', '95869-00', '95870-00', '95871-00', '95873-00', '95878-00', '95885-00', '95887-00', '95889-00', '95890-00', '95894-00', '95895-00', '95896-00', '95898-00', '95903-00', '95904-00', '95905-00', '95912-00', '95916-00', '95927-00', '95932-00', '95934-00', '95936-00', '95940-00', '95971-00', '95972-00', '95974-00', '95975-00', '95976-00', '95978-00', '96038-00', '96039-00', '96041-00', '96042-00', '96043-00', '96044-00', '96045-00', '96046-00', '96048-00', '96049-00', '96052-00', '96054-00', '96057-00', '96058-00', '96059-00', '96061-00', '96062-00', '96160-00', '96163-00', '96165-00', '96169-00', '96171-00', '96172-00', '96178-00', '96184-00', '96187-00', '96188-00', '96189-00', '96190-00', '96193-00', '96194-00', '96197-00', '96202-00', '96203-00', '96204-00', '96206-00', '96207-00', '96211-00', '96276-00',
      //   '96278-00', '96279-00', '96280-00', '96281-00', '96282-00', '96283-00', '96284-00', '96286-00', '96288-00', '96289-00', '96297-00', '96694-00', '96700-00', '96703-00', '96706-00', '96707-00', '96708-00', '96709-00', '96711-00', '96716-00', '96718-00', '96721-00', '96723-00', '96724-00', '96743-00', '96746-00', '96747-00', '96748-00', '96749-00', '96751-00', '96752-00', '96753-00', '96755-00', '96756-00', '96758-00', '96769-00', '96771-00', '96773-00', '96775-00', '96776-00', '96777-00', '96778-00', '96779-00', '96780-00', '96782-00', '96784-00', '96788-00', '96789-00', '96791-00', '96795-00', '96796-00', '96797-00', '96799-00', '700232-00', '700326-00', '700335-00', '705172-00', '705175-00', '709813-00', '709814-00', '710488-00', '710489-00', '710704-00', '710707-00', '710708-00', '710709-00', '710717-00', '710728-00', '710732-00', '710746-00', '710747-00', '711201-00', '711205-00', '711208-00', '711209-00', '711210-00', '711212-00', '711218-00', '711223-00', '711225-00', '711226-00', '711230-00', '711232-00', '711233-00', '711237-00', '711239-00', '711243-00', '711247-00', '711249-00', '711251-00', '711257-00', '711258-00', '711264-00', '711267-00', '711269-00', '711279-00', '711281-00', '711284-00', '711289-00', '711291-00', '711292-00', '711293-00', '711298-00', '711299-00', '711352-00', '711353-00', '711355-00', '711372-00', '711373-00', '711374-00', '711375-00', '711379-00', '711382-00', '711389-00', '711395-00', '711501-00', '711502-00', '711504-00', '711509-00', '711513-00', '711514-00', '711520-00', '711525-00', '711543-00', '711548-00', '711555-00', '711591-00', '711595-00', '711596-00', '711597-00', 'M0007-00', 'M0008-00', 'M0009-00', 'M0010-00', 'M0012-00', 'M0013-00', 'M0014-00', 'M0016-00', 'M0018-00', 'M0019-00', 'M0020-00', 'M0022-00', 'M0033-00', 'M0035-00', 'M0036-00', 'M0041-00', 'M0043-00', 'M0047-00', 'M0053-00', '2340010002', 'M0068-00', 'M0081-00', '2340010028', 'M0091-00', '2340010034', 'M0095-00', '2340010036', 'M0096-00', '2340010037', 'M0098-00', '2340010038', 'M0101-00', 'M0102-00', '2340010039', '2340010040', 'M0103-00', '2340010041', 'M0107-00', 'M0108-00', '2340010043', 'M0110-00', '2340010044', '2340010045', '2340010047', '2340010050', '2340010051', 'M0126-00', '2340010052', 'M0128-00', '2340010053', 'M0129-00', '2340010054', 'M0130-00', '2340010055', 'M0131-00', '2340010056', 'M0133-00', 'M0134-00', '2340010059', 'M0135-00', '2340010060', '2340010065', 'M0151-00', 'M0152-00', '2340010069', '2340010070', 'M0155-00', 'M0156-00', 'M0157-00', '2340010079', 'M0159-00', 'M0160-00', 'M0162-00', '2340010089', '2340010090', '2340010091', 'M0167-00', '2340010092', '2340010097', '2340010098', '2340010102', 'M0180-00', '2340010104', 'M0182-00', '2340010108', 'M0186-00', 'M0188-00', 'M0189-00', 'M0191-00', 'M0192-00', 'M0203-00', 'M0244-00', 'M0245-00', 'M0246-00', 'M0253-00', '2340120021', 'M0259-00', 'M0260-00', 'M0267-00', 'M0274-00', '2340320015', '2340320016', '2340320017', '2340320020', '2340320021', '2340320022', '2340320023', '2340320024', '2340320026', '2340320027', '2340320028', '2340320030', '2340320033', '2340320035', '2340320036', '2340320037', '2340320038', '2340320039', '2340320041', '2340320045', '2340320046', '2340320047', '2340320048', '2340320050', '2340320051', '2340320054', '2340320055', '2340320056', '2340320057', '2340320059', '2340320060', '2340320061', '2340320062', 'M0038-00', 'M0039-00', '95821-00', '95820-00', '25187002', '27524-00', '27904-00', '30403-00', '30502-00', '30514-00', '30530-00', '30541-00', '30544-00', '30546-00', '30549-00', '30551-00', '30626-00', '30645-00', '30646-00', '30647-00', '30648-00', '30655-00', '30657-00', '30661-00', '30669-00', '30711-00', '30713-00', '30725-00', '30742-00', '30750-00', '30751-00', '33115144', '33115145', '33152120', '33152121', '33152123', '33152125', '33152127', '33152128', '33152133', '33152134', '33152150', '33152153', '33153139', '33162147', '33163216', '33163219', '33163221', '33163224', '33163225', '33163227', '33163228', '33166168', '33166218', '33167136', '33167162', '33168203', '33168204', '33170100', '33199130', '33199135', '33199210', '33199223', '33217207', '33254211', '33270159', '33271164', '33271165', '33271166', '33299204', '33968204', '38154504', '38154505', '38154507', '38154508', '38154509', '38154510', '38154511', '38158525', '38158527', '38158542', '38158543', '38158545', '38158546', '38161512', '38161517', '38161520', '38164554', '38165522', '38165523', '38165524', '38166102', '38166103', '38166503', '38166504', '38166505', '38166506', '38166531', '38168310', '38168311', '38168313', '38168314', '38168315', '38168316', '38168317', '38168318', '38173521', '38173564', '38173565', '38174309', '38174310', '38175101', '38175317', '38175319', '38175320', '38176201', '38176302', '38176304', '38199013', '38199202', '38199507', '38199529', '38199553', '38199559', '38199563', '38199566', '38200001', '38200002', '38260537', '33152122', '33152124', '33152131', '33152132', '33153214', '33157142', '33159205', '33163215', '33163222', '33166166', '38173520', '38199536', '38199549', '38901561', '33152137', '38199534', '38200003', '38200004', '38273552', '33152141', '33152151', '33157160', '33162143', '38161513', '33152129', '725035-00', '725372-00', '725373-00', '2340320063', '724940-00', '724941-00', '725374-00', '725376-00', '725377-00', '725381-00', '724942-00', '725378-00', '725379-00', '725387-00', '725380-00', '13135386', '13135385', '725040-00', '725391-00', '725389-00', '725041-00', '725042-00', '725395-00', '725397-00', '721561-00', '724943-00', '725398-00', '725396-00', '724946-00', '721562-00', '725399-00', '725043-00', '726100-00', '15734-00', '724947-00', '725046-00', '725045-00', '726104-00', '726102-00', '726105-00', '726103-00', '726111-00', '726110-00', '726112-00', '724948-00', '718747-00', '726107-00', '2340320065', '726115-00', '725051-00', '726114-00', '726113-00', '718748-00', '725052-00', '726106-00', '726116-00', '726118-00', '718749-00', '726117-00', '724949-00', '726121-00', '726119-00', '724950-00', '726122-00', '726123-00', '726124-00', '726120-00', '726125-00', '724953-00', '724952-00', '15735-00', '724954-00', '725054-00', '726127-00', '726132-00', '725055-00', '726137-00', '726138-00', '726131-00', '726136-00', '726134-00', '726140-00', '725058-00', '15736-00', '15737-00', '726133-00', '726141-00', '2340320067', '724957-00', '724956-00', '724958-00', '726142-00', '2340320066', '724960-00', '726143-00', '726145-00', '726144-00', '15738-00', '2340320068', '724963-00', '718751-00', '13135388', '724961-00', '726148-00', '726147-00', '725060-00', '724968-00', '13135389', '726151-00', '724966-00', '726149-00', '724967-00', '726150-00', '724971-00', '2340320069', '725056-00', '726153-00', '725062-00', '726158-00', '726154-00', '725064-00', '726155-00', '718752-00', '726152-00', '724972-00', '726160-00', '726168-00', '726163-00', '726164-00', '726165-00', '726167-00', '724973-00', '726166-00', '724975-00', '726169-00', '726172-00', '724976-00', '726176-00', '726175-00', '726170-00', '726174-00', '724978-00', '726179-00', '726177-00', '726178-00', '726173-00', '2340320070', '724979-00', '726188-00', '724980-00', '726186-00', '725073-00', '726183-00', '725075-00', '724981-00', '725072-00', '726189-00', '726191-00', '726192-00', '725074-00', '724982-00', '724984-00', '725076-00', '15740-00', '724983-00', '724985-00', '725071-00', '2340320072', '726199-00', '726195-00', '2340322073', '2340320071', '726901-00', '725078-00', '726197-00', '726903-00', '726902-00', '726907-00', '726910-00', '726906-00', '726908-00', '726909-00', '724988-00', '725079-00', '724987-00', '15741-00', '724992-00', '726911-00', '724993-00', '726916-00', '724994-00', '724991-00', '726913-00', '726923-00', '726922-00', '726920-00', '724990-00', '2340322075', '726921-00', '726924-00', '724995-00', '2340322078', '15742-00', '2340322074', '726928-00', '724996-00', '15743-00', '2340322076', '726934-00', '2340322080', '725091-00', '725092-00', '726936-00', '726937-00', '718755-00', '718754-00', '726929-00', '726932-00', '726939-00', '726940-00', '724998-00', '726943-00', '726945-00', '726933-00', '2340322077',
      //   '724999-00', '726948-00', '726944-00', '726946-00', '726931-00', '727900-00', '13135390', '726930-00', '725097-00', '726954-00', '726956-00', '727856-00', '726951-00', '726957-00', '727901-00', '727857-00', '726952-00', '727858-00', '727855-00', '727902-00', '726953-00', '15744-00', '726938-00', '726962-00', '727853-00', '726960-00', '718756-00', '726963-00', '726961-00', '726964-00', '727861-00', '726959-00', '727860-00', '726966-00', '727906-00', '726965-00', '727908-00', '727868-00', '726968-00', '718760-00', '726967-00', '727866-00', '15746-00', '727911-00', '726970-00', '13135396', '718758-00', '15747-00', '718759-00', '727912-00', '726975-00', '726974-00', '726973-00', '727915-00', '727913-00', '727874-00', '726976-00', '726977-00', '726978-00', '727914-00', '726979-00', '721566-00', '726980-00', '15754-00', '726972-00', '726982-00', '726988-00', '727916-00', '726995-00', '726989-00', '726991-00', '15750-00', '726983-00', '726993-00', '726986-00', '726984-00', '726990-00', '726992-00', '726994-00', '727877-00', '13135401', '15755-00', '726997-00', '727918-00', '727917-00', '718762-00', '727919-00', '727920-00', '727924-00', '727921-00', '726999-00', '13135404', '726981-00', '727010-00', '727883-00', '13135403', '13135397', '727015-00', '727009-00', '727926-00', '727007-00', '727927-00', '727929-00', '727017-00', '15760-00', '726987-00', '727018-00', '727004-00', '727024-00', '13135405', '727016-00', '13135407', '15764-00', '727021-00', '15759-00', '15765-00', '13135410', '15762-00', '15772-00', '727028-00', '727029-00', '727005-00', '15771-00', '13135408', '727893-00', '727930-00', '15770-00', '727936-00', '727025-00', '727937-00', '727938-00', '727033-00', '15769-00', '727940-00', '13135409', '727896-00', '727008-00', '728803-00', '15773-00', '718765-00', '727038-00', '727941-00', '727931-00', '727042-00', '727023-00', '728801-00', '727039-00', '727892-00', '15774-00', '727943-00', '15776-00', '727041-00', '726955-00', '727045-00', '13135412', '727947-00', '727948-00', '718768-00', '742500-00', '727946-00', '727044-00', '742505-00', '727031-00', '728805-00', '727043-00', '15778-00', '728804-00', '727050-00', '727954-00', '727949-00', '742515-00', '727048-00', '742516-00', '15775-00', '742517-00', '727950-00', '727952-00', '718771-00', '727955-00', '728802-00', '728810-00', '727956-00', '727046-00', '728821-00', '728822-00', '742520-00', '742521-00', '742519-00', '13135413', '727958-00', '728828-00', '728823-00', '728819-00', '728812-00', '728813-00', '728833-00', '727037-00', '728829-00', '728827-00', '742525-00', '13135416', '728835-00', '13135417', '728837-00', '742528-00', '727049-00', '728840-00', '742529-00', '728831-00', '742503-00', '742531-00', '728834-00', '728843-00', '742532-00', '727960-00', '742533-00', '727962-00', '13135418', '742534-00', '728845-00', '727961-00', '742536-00', '15780-00', '2340322088', '728847-00', '742537-00', '13135419', '728851-00', '728852-00', '742540-00', '742530-00', '727966-00', '742539-00', '13135420', '728854-00', '728857-00', '15785-00', '728858-00', '718774-00', '721568-00', '718775-00', '718776-00', '727971-00', '742543-00', '742545-00', '718777-00', '728859-00', '13135421', '727972-00', '742549-00', '728842-00', '15789-00', '728864-00', '15787-00', '742550-00', '728876-00', '742551-00', '728869-00', '728877-00', '728867-00', '15788-00', '728886-00', '728880-00', '728888-00', '742552-00', '728865-00', '728884-00', '728890-00', '728883-00', '728891-00', '727974-00', '726969-00', '727973-00', '727977-00', '742554-00', '727975-00', '13135422', '727978-00', '742556-00', '728892-00', '727979-00', '742560-00', '728895-00', '728898-00', '742558-00', '13135423', '15791-00', '726998-00', '742542-00', '742557-00', '718779-00', '728904-00', '13135424', '727980-00', '728905-00', '728889-00', '742562-00', '718781-00', '728902-00', '742559-00', '728903-00', '742563-00', '742561-00', '15795-00', '742565-00', '742566-00', '15793-00', '727982-00', '742567-00', '728912-00', '728909-00', '742544-00', '13135425', '742569-00', '742570-00', '15794-00', '727983-00', '742571-00', '742568-00', '742572-00', '727984-00', '728910-00', '15792-00', '728916-00', '728911-00', '728920-00', '728914-00', '742574-00', '728923-00', '728925-00', '742575-00', '728948-00', '727989-00', '728928-00', '727988-00', '727987-00', '728929-00', '13135427', '728949-00', '727991-00', '727990-00', '742579-00', '728958-00', '742581-00', '742582-00', '742583-00', '728962-00', '13135428', '727992-00', '742584-00', '728965-00', '728927-00', '728961-00', '15796-00', '15797-00', '727993-00', '728964-00', '15801-00', '742585-00', '727996-00', '727995-00', '15808-00', '727997-00', '742591-00', '742589-00', '742594-00', '728979-00', '727998-00', '728981-00', '728982-00', '15811-00', '15813-00', '728980-00', '742593-00', '742597-00', '742598-00', '742600-00', '742599-00', '718784-00', '742603-00', '742602-00', '742604-00', '742612-00', '742601-00', '742611-00', '15814-00', '742615-00', '742614-00', '742613-00', '742618-00', '742616-00', '13135432', '13135434', '742623-00', '742626-00', '742629-00', '742631-00', '742632-00', '742633-00', '742635-00', '742634-00', '742638-00', '742636-00', '742641-00', '742643-00', '742644-00', '742646-00', '742654-00', '742653-00'
      // ];


      this.loadDCPMeters(FeatureLayer, WebMercatorUtils, meterNumbers, true);
      //this.loadDCPPlants(FeatureLayer);
      //this.loadDCPBoosters(FeatureLayer);

      this.hideProgressBar();
    });

  }

  private zoomToExtent = (extent): void => {
    //console.log('Extent', extent);
    //console.log('Map View WKID', this.mapView.spatialReference.wkid);
    //console.log('Extent WKID', extent.spatialReference.wkid);

    this.mapView.goTo(extent).then((results) => {
      //console.log('Results', results);
      this.mapView.zoom = this.mapView.zoom - 1;
      // setTimeout(() => {
      //   //this.mapView.zoom = 12;
      //   //this.mapView.zoom = this.mapView.zoom + 1;
      //   this.mapView.zoom = this.mapView.zoom - 1;
      //   console.log('Zoomed In!');
      //   //return true;
      // }, 2000);
      //this.mapView.zoom = 12;
      //this.mapView.zoom = this.mapView.zoom + 1;
    });
  }

  private toggleLayerVisibility = (featureLayer, visible): void => {
    //console.log('Feature Layer', featureLayer);
    if (featureLayer !== null || typeof featureLayer !== "undefined") {
      featureLayer.visible = visible;
    }
  }

  private loadUSCities = (FeatureLayer): void => {
    this.usCitiesFeatureLayer = new FeatureLayer({
      url: "https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/0",
      outFields: ["*"],
      visible: true,
    });

    this.map.add(this.usCitiesFeatureLayer);

    //this.toggleLayerVisibility(this.usCitiesFeatureLayer, true);
  }

  private loadUSHighways = (FeatureLayer): void => {
    this.usHighwaysFeatureLayer = new FeatureLayer({
      url: "https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/1",
      outFields: ["*"],
      visible: true,
    });

    this.map.add(this.usHighwaysFeatureLayer);

    //this.toggleLayerVisibility(this.usHighwaysFeatureLayer, true);
  }

  private loadUSStates = (FeatureLayer): void => {
    this.usStatesFeatureLayer = new FeatureLayer({
      url: "https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/2",
      outFields: ["*"],
      visible: true,
    });

    this.map.add(this.usStatesFeatureLayer);

    //this.toggleLayerVisibility(this.usStatesFeatureLayer, true);
  }

  private loadUSCounties = (FeatureLayer): void => {
    this.usCountiesFeatureLayer = new FeatureLayer({
      url: "https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/3",
      outFields: ["*"],
      visible: true,
    });

    this.map.add(this.usCountiesFeatureLayer);

    //this.toggleLayerVisibility(this.usCountiesFeatureLayer, true);
  }

  private loadDCPPlants = (FeatureLayer): void => {
    this.dcpPlantsFeatureLayer = new FeatureLayer({
      url: "https://gistest.dcpmidstream.com/arcgis/rest/services/Ext_CustomerDashboard/Ext_Dashboard_Layers/MapServer/0",
      outFields: ["*"],
      visible: true,
      popupTemplate: { // autocasts as new PopupTemplate()
        //title: "<font color='#008000'>DCP Plants</font>",
        title: "DCP Plant",

        // Set content elements in the order to display.
        // The first element displayed here is the fieldInfos.
        content: [
          {
            // It is also possible to set the fieldInfos outside of the content
            // directly in the popupTemplate. If no fieldInfos is specifically set
            // in the content, it defaults to whatever may be set within the popupTemplate.
            type: "fields",
            fieldInfos: [
              {
                fieldName: "PLANT_ID",
                visible: true,
                label: "Plant ID",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "NAME",
                visible: true,
                label: "Plant Name",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "TYPE",
                visible: true,
                label: "Plant Type",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "STATUS",
                visible: true,
                label: "Plant Status"
              },
              {
                fieldName: "LONGITUDE",
                visible: true,
                label: "Longitude"
              },
              {
                fieldName: "LATITUDE",
                visible: true,
                label: "Latitude"
              }
            ]
          },
          //   {
          //     // You can also set a descriptive text element. This element
          //     // uses an attribute from the featurelayer which displays a
          //     // sentence giving the total amount of trees value within a
          //     // specified census block. Text elements can only be set within the content.
          //     type: "text",
          //     text: "There are {Point_Count} trees within census block {BLOCKCE10}"
          //   },
          //   {
          //     // You can set a media element within the popup as well. This
          //     // can be either an image or a chart. You specify this within
          //     // the mediaInfos. The following creates a pie chart in addition
          //     // to two separate images. The chart is also set up to work with
          //     // related tables. Similar to text elements, media can only be set within the content.
          //     type: "media",
          //     mediaInfos: [
          //       {
          //         title: "<b>Count by type</b>",
          //         type: "pie-chart",
          //         caption: "",
          //         value: {
          //           theme: "Grasshopper",
          //           fields: ["relationships/0/Point_Count_COMMON"],
          //           normalizeField: null,
          //           tooltipField: "relationships/0/COMMON"
          //         }
          //       },
          //       {
          //         title: "<b>Welcome to Beverly Hills</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://www.beverlyhills.org/cbhfiles/storage/files/13203374121770673849/122707_039r_final.jpg"
          //         }
          //       },
          //       {
          //         title: "<b>Palm tree lined street</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://cdn.loc.gov/service/pnp/highsm/21600/21679r.jpg"
          //         }
          //       }
          //     ]
          //   },
          //   {
          //     // You can set a attachment element(s) within the popup as well.
          //     // Similar to text and media elements, attachments can only be set
          //     // within the content. Any attachmentInfos associated with the feature
          //     // will be listed in the popup.
          //     type: "attachments"
          //   }
        ]
      },
    });

    this.map.add(this.dcpPlantsFeatureLayer);

    //this.toggleLayerVisibility(this.dcpPlantsFeatureLayer, true);
  }

  private loadDCPBoosters = (FeatureLayer): void => {
    this.dcpBoostersFeatureLayer = new FeatureLayer({
      url: "https://gistest.dcpmidstream.com/arcgis/rest/services/Ext_CustomerDashboard/Ext_Dashboard_Layers/MapServer/1",
      outFields: ["*"],
      visible: true,
      popupTemplate: { // autocasts as new PopupTemplate()
        //title: "<font color='#008000'>DCP Boosters</font>",
        title: "DCP Booster",

        // Set content elements in the order to display.
        // The first element displayed here is the fieldInfos.
        content: [
          {
            // It is also possible to set the fieldInfos outside of the content
            // directly in the popupTemplate. If no fieldInfos is specifically set
            // in the content, it defaults to whatever may be set within the popupTemplate.
            type: "fields",
            fieldInfos: [
              {
                fieldName: "BOOSTER_ID",
                visible: true,
                label: "Booster ID",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "NAME",
                visible: true,
                label: "Booster Name",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              // {
              //   fieldName: "TYPE",
              //   visible: true,
              //   label: "Plant Type",
              //   format: {
              //     places: 0,
              //     digitSeparator: true
              //   }
              // },
              {
                fieldName: "STATUS",
                visible: true,
                label: "Booster Status"
              },
              {
                fieldName: "LONGITUDE",
                visible: true,
                label: "Longitude"
              },
              {
                fieldName: "LATITUDE",
                visible: true,
                label: "Latitude"
              }
            ]
          },
          //   {
          //     // You can also set a descriptive text element. This element
          //     // uses an attribute from the featurelayer which displays a
          //     // sentence giving the total amount of trees value within a
          //     // specified census block. Text elements can only be set within the content.
          //     type: "text",
          //     text: "There are {Point_Count} trees within census block {BLOCKCE10}"
          //   },
          //   {
          //     // You can set a media element within the popup as well. This
          //     // can be either an image or a chart. You specify this within
          //     // the mediaInfos. The following creates a pie chart in addition
          //     // to two separate images. The chart is also set up to work with
          //     // related tables. Similar to text elements, media can only be set within the content.
          //     type: "media",
          //     mediaInfos: [
          //       {
          //         title: "<b>Count by type</b>",
          //         type: "pie-chart",
          //         caption: "",
          //         value: {
          //           theme: "Grasshopper",
          //           fields: ["relationships/0/Point_Count_COMMON"],
          //           normalizeField: null,
          //           tooltipField: "relationships/0/COMMON"
          //         }
          //       },
          //       {
          //         title: "<b>Welcome to Beverly Hills</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://www.beverlyhills.org/cbhfiles/storage/files/13203374121770673849/122707_039r_final.jpg"
          //         }
          //       },
          //       {
          //         title: "<b>Palm tree lined street</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://cdn.loc.gov/service/pnp/highsm/21600/21679r.jpg"
          //         }
          //       }
          //     ]
          //   },
          //   {
          //     // You can set a attachment element(s) within the popup as well.
          //     // Similar to text and media elements, attachments can only be set
          //     // within the content. Any attachmentInfos associated with the feature
          //     // will be listed in the popup.
          //     type: "attachments"
          //   }
        ]
      },
    });

    this.map.add(this.dcpBoostersFeatureLayer);

    //this.toggleLayerVisibility(this.dcpBoostersFeatureLayer, true);
  }

  // ToDo: Rework this method to be more generic once we've optimized it for thousands of features. - got here

  private loadDCPMeters = (FeatureLayer, webMercatorUtils, meterNumbers, renderPipelines): void => {
    let meterCount = 0;

    if (meterNumbers !== null && typeof (meterNumbers) !== 'undefined')
      meterCount = meterNumbers.length;

    console.time("meters load time");
    //console.profile("Meters Load Profile");

    if (meterCount === 0) {
      let dcpMetersFeatureLayer = new FeatureLayer({
        url: "https://gistest.dcpmidstream.com/arcgis/rest/services/Ext_CustomerDashboard/Ext_Dashboard_Layers/MapServer/2",
        outFields: ["*"],
        visible: true,
        popupTemplate: { // autocasts as new PopupTemplate()
          //title: "<font color='#008000'>DCP Meters</font>",
          title: "DCP Meter",

          // Set content elements in the order to display.
          // The first element displayed here is the fieldInfos.
          content: [
            {
              // It is also possible to set the fieldInfos outside of the content
              // directly in the popupTemplate. If no fieldInfos is specifically set
              // in the content, it defaults to whatever may be set within the popupTemplate.
              type: "fields",
              fieldInfos: [
                {
                  fieldName: "METER_NUMBER",
                  visible: true,
                  label: "Meter Number",
                  format: {
                    places: 0,
                    digitSeparator: true
                  }
                },
                {
                  fieldName: "METER_NAME",
                  visible: true,
                  label: "Meter Name",
                  format: {
                    places: 0,
                    digitSeparator: true
                  }
                },
                {
                  fieldName: "STATUS",
                  visible: true,
                  label: "Status",
                  format: {
                    places: 0,
                    digitSeparator: true
                  }
                },
                {
                  fieldName: "METER_STATUS",
                  visible: true,
                  label: "Meter Status"
                },
                {
                  fieldName: "COMPANY_NAME",
                  visible: true,
                  label: "Company Name"
                },
                {
                  fieldName: "SYSTEM",
                  visible: true,
                  label: "System"
                }
              ]
            },
          ]
        },
      });

      this.map.add(dcpMetersFeatureLayer);
    }
    else {
      let i, j = 0;

      let dcpMeterFeatureLayers = [];

      // *Note: For performance reasons we split the meters into feature layers with 1000 features.
      for (i = 0, j = meterNumbers.length; i < j; i += this.dataChunkSize) {
        let slicedMeterNumbers = meterNumbers.slice(i, i + this.dataChunkSize);

        let counter = 0;
        let slicedMeterCount = slicedMeterNumbers.length;
        let lookupField = 'METER_NUMBER';
        let whereClause = "";

        whereClause += lookupField + " IN (";
        slicedMeterNumbers.forEach(meterNumber => {
          counter++;
          whereClause += "'" + meterNumber + "'";
          if (counter < slicedMeterCount)
            whereClause += ",";
        });
        whereClause += ")";

        //console.log('Where Clause', whereClause);
        //console.log("Meter Count", meterCount);

        console.log('rendering ' + slicedMeterCount + '/' + meterCount + ' meters...');

        let dcpMetersFeatureLayer = new FeatureLayer({
          url: "https://gistest.dcpmidstream.com/arcgis/rest/services/Ext_CustomerDashboard/Ext_Dashboard_Layers/MapServer/2",
          outFields: ["*"],
          visible: true,
          definitionExpression: whereClause,
          popupTemplate: { // autocasts as new PopupTemplate()
            //title: "<font color='#008000'>DCP Meters</font>",
            title: "DCP Meter",

            // Set content elements in the order to display.
            // The first element displayed here is the fieldInfos.
            content: [
              {
                // It is also possible to set the fieldInfos outside of the content
                // directly in the popupTemplate. If no fieldInfos is specifically set
                // in the content, it defaults to whatever may be set within the popupTemplate.
                type: "fields",
                fieldInfos: [
                  {
                    fieldName: "METER_NUMBER",
                    visible: true,
                    label: "Meter Number",
                    format: {
                      places: 0,
                      digitSeparator: true
                    }
                  },
                  {
                    fieldName: "METER_NAME",
                    visible: true,
                    label: "Meter Name",
                    format: {
                      places: 0,
                      digitSeparator: true
                    }
                  },
                  {
                    fieldName: "STATUS",
                    visible: true,
                    label: "Status",
                    format: {
                      places: 0,
                      digitSeparator: true
                    }
                  },
                  {
                    fieldName: "METER_STATUS",
                    visible: true,
                    label: "Meter Status"
                  },
                  {
                    fieldName: "COMPANY_NAME",
                    visible: true,
                    label: "Company Name"
                  },
                  {
                    fieldName: "SYSTEM",
                    visible: true,
                    label: "System"
                  }
                ]
              },
            ]
          },
        });

        this.map.add(dcpMetersFeatureLayer);
        dcpMeterFeatureLayers.push(dcpMetersFeatureLayer);

        dcpMetersFeatureLayer.then((results) => {
          //console.log('dcp meters feature layer loaded!');
          //dcpMetersFeatureLayer.visible = true;
          dcpMetersFeatureLayer.highlight();
        });
      }

      // let meterFeatureLayerExtentQueries = [];

      Promise.all(dcpMeterFeatureLayers).then((results) => {
        //alert('all done!');
        //console.log('all dcp meters feature layers loaded!')
        //console.log('Results', results);

        // let fullExtent = null;
        let meterFeatureLayerExtentQueries = [];

        results.forEach(featureLayer => {
          //console.log('Feature Layer', featureLayer);

          let meterFeatureLayerExtentQuery = featureLayer.queryExtent();
          meterFeatureLayerExtentQueries.push(meterFeatureLayerExtentQuery);

          meterFeatureLayerExtentQuery.then((results) => {
            //console.log('meter feature layer extent query executed!')
            //console.log('Results', results);
            // let featuresExtent = results.extent;
            // console.log('Features Extent', featuresExtent);
            // if (fullExtent === null)
            //   fullExtent = featuresExtent;
            // else
            //   fullExtent = fullExtent.union(featuresExtent);
          });
        });

        Promise.all(meterFeatureLayerExtentQueries).then((results) => {
          //console.log('all meter feature layer extent queries executed!');
          //onsole.log('Results', results);

          let fullExtent = null;
          let totalFeatureCount = 0;

          results.forEach(featureLayerQueryResult => {
            //console.log('Feature Layer Query Result', featureLayerQueryResult);

            let featureCount = featureLayerQueryResult.count;

            //console.log('drawing ' + slicedMeterCount + '/' + meterCount + ' meters...');

            totalFeatureCount += featureCount;

            let featuresExtent = featureLayerQueryResult.extent;
            //console.log('Features Extent', featuresExtent);
            if (fullExtent === null)
              fullExtent = featuresExtent;
            else
              fullExtent = fullExtent.union(featuresExtent);
          });

          //console.log('Full Extent', fullExtent);

          let convertedExtent = webMercatorUtils.geographicToWebMercator(fullExtent);

          //console.log('Converted Extent', convertedExtent);

          //console.log('total features rendered =>', totalFeatureCount);

          console.log(totalFeatureCount + '/' + meterCount + ' meters rendered!');

          console.timeEnd("meters load time");
          //console.profileEnd();

          this.zoomToExtent(convertedExtent);

          // ToDo: Replace with generic load method once its been implemented and compare metrics between this and the custom module (ram, load time, latency, etc.)

          this.loadDCPPlants(FeatureLayer);
          this.loadDCPBoosters(FeatureLayer);
          if (renderPipelines)
            this.loadDCPPipelines(FeatureLayer);

          //console.log('Map View', this.mapView);
        });


        // dcpMetersFeatureLayer.then((results) => {
        //   return dcpMetersFeatureLayer.queryExtent();
        // }).then((results) => {
        //   //console.log('Meter Layer Loaded', this.dcpMetersFeatureLayer.loaded);

        //   let featuresExtent = results.extent;

        //   console.log('Features Extent', featuresExtent);

        //   let convertedExtent = webMercatorUtils.geographicToWebMercator(featuresExtent);

        //   console.log('Converted Extent', convertedExtent);

        //   this.zoomToExtent(convertedExtent);

        //console.timeEnd("Meters Load Time");
        //console.profileEnd();
      });
    }

    // Promise.all(meterFeatureLayerExtentQueries).then((results) => {
    //   console.log('all meter feature layer extent queries executed!');
    //   console.log('Results', results);
    // });
  }

  private loadDCPPipelines = (FeatureLayer): void => {
    // todo: wire up load time metrics for these methods
    this.dcpPipelinesFeatureLayer = new FeatureLayer({
      url: "https://gistest.dcpmidstream.com/arcgis/rest/services/Ext_CustomerDashboard/Ext_Dashboard_Layers/MapServer/3",
      outFields: ["*"],
      visible: true,
      popupTemplate: { // autocasts as new PopupTemplate()
        //title: "<font color='#008000'>DCP Meters</font>",
        title: "DCP Pipeline",

        // Set content elements in the order to display.
        // The first element displayed here is the fieldInfos.
        content: [
          {
            // It is also possible to set the fieldInfos outside of the content
            // directly in the popupTemplate. If no fieldInfos is specifically set
            // in the content, it defaults to whatever may be set within the popupTemplate.
            type: "fields",
            fieldInfos: [
              {
                fieldName: "LINE_ID",
                visible: true,
                label: "Pipeline ID",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "LINE_NO",
                visible: true,
                label: "Pipeline Number",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "LINE_DESCRIPTION",
                visible: true,
                label: "Pipeline Description",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "DIVISION_NAME",
                visible: true,
                label: "Division Name",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "REGION_NAME",
                visible: true,
                label: "Region Name",
                format: {
                  places: 0,
                  digitSeparator: true
                }
              },
              {
                fieldName: "SYSTEM_NAME",
                visible: true,
                label: "System Name"
              },
              {
                fieldName: "SUBSYSTEM_NAME",
                visible: true,
                label: "Sub System Name"
              }
            ]
          },
          //   {
          //     // You can also set a descriptive text element. This element
          //     // uses an attribute from the featurelayer which displays a
          //     // sentence giving the total amount of trees value within a
          //     // specified census block. Text elements can only be set within the content.
          //     type: "text",
          //     text: "There are {Point_Count} trees within census block {BLOCKCE10}"
          //   },
          //   {
          //     // You can set a media element within the popup as well. This
          //     // can be either an image or a chart. You specify this within
          //     // the mediaInfos. The following creates a pie chart in addition
          //     // to two separate images. The chart is also set up to work with
          //     // related tables. Similar to text elements, media can only be set within the content.
          //     type: "media",
          //     mediaInfos: [
          //       {
          //         title: "<b>Count by type</b>",
          //         type: "pie-chart",
          //         caption: "",
          //         value: {
          //           theme: "Grasshopper",
          //           fields: ["relationships/0/Point_Count_COMMON"],
          //           normalizeField: null,
          //           tooltipField: "relationships/0/COMMON"
          //         }
          //       },
          //       {
          //         title: "<b>Welcome to Beverly Hills</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://www.beverlyhills.org/cbhfiles/storage/files/13203374121770673849/122707_039r_final.jpg"
          //         }
          //       },
          //       {
          //         title: "<b>Palm tree lined street</b>",
          //         type: "image",
          //         value: {
          //           sourceURL: "https://cdn.loc.gov/service/pnp/highsm/21600/21679r.jpg"
          //         }
          //       }
          //     ]
          //   },
          //   {
          //     // You can set a attachment element(s) within the popup as well.
          //     // Similar to text and media elements, attachments can only be set
          //     // within the content. Any attachmentInfos associated with the feature
          //     // will be listed in the popup.
          //     type: "attachments"
          //   }
        ]
      },
    });

    this.map.add(this.dcpPipelinesFeatureLayer, -1000);

    //this.toggleLayerVisibility(this.dcpPipelinesFeatureLayer, true);
  }

  showProgressBar = (): void => {
    if (this.progressBar !== null && typeof this.progressBar !== "undefined" && this.progressBar.nativeElement !== null && typeof this.progressBar.nativeElement !== "undefined")
      this.progressBar.nativeElement.style.display = 'inline';
  }

  hideProgressBar = (): void => {
    // this.logToConsole("Progress Bar", this.progressBar.nativeElement);
    if (this.progressBar !== null && typeof this.progressBar !== "undefined" && this.progressBar.nativeElement !== null && typeof this.progressBar.nativeElement !== "undefined")
      this.progressBar.nativeElement.style.display = 'none';
  }
}